{
	"info": {
		"_postman_id": "5627f151-dd7b-4e5c-9681-461bed31ccc8",
		"name": "day_02",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1453931"
	},
	"item": [
		{
			"name": "step 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"var schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"id\": { \"type\": \"number\" },",
							"    \"email\": { \"type\": \"string\" }",
							"  },",
							"  \"required\": [\"id\", \"email\"],",
							"};",
							"",
							"var data1 = pm.response.json();",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"});",
							"",
							"",
							"",
							"pm.test(\"Check data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(2);",
							"    pm.expect(jsonData.email).to.eql(\"Sincere@april.biz\");",
							"    pm.collectionVariables.set(\"MY_EMAIL\", jsonData.email);",
							"",
							"",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 3s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "step 2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/users/{{MY_EMAIL}}",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"users",
						"{{MY_EMAIL}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "MY_EMAIL",
			"value": ""
		}
	]
}